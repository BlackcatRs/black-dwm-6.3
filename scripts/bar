#!/bin/env bash

# ^c$var^ = fg color
# ^b$var^ = bg color

# load colors
. "$HOME/.local/share/bar_themes/nord"

cpu() {
  cpu_val=$(grep -o "^[^ ]*" /proc/loadavg)

  printf "^c$black^^b$green^ CPU"
  printf "^c$white^ ^b$grey^ $cpu_val ^d^"
}

pkg_updates() {
    updates=`sudo pacman -Syy 2>&1 > /dev/null && pacman -Sup 2> /dev/null | wc -l`
    if [ "$updates" == 0 ]; then
	printf ""
    else
	printf "^c$green^  $updates^d^"
    fi
}

battery() {
  get_capacity="$(cat /sys/class/power_supply/BAT1/capacity)"
  printf "^d^^c$blue^ $get_capacity"
}

brightness() {
  MAX_BRIGHTNESS=$(cat /sys/class/backlight/*/max_brightness)
  BRIGHTNESS=$(cat /sys/class/backlight/*/brightness)
  BRIGHTNESS_PERCENT=$((($BRIGHTNESS*100)/$MAX_BRIGHTNESS))

  printf "^c$red^  "
  printf "^c$red^%.0f^d^\n" $BRIGHTNESS_PERCENT
}

mem() {
  printf "^c$blue^^b$black^ "
  printf "^c$blue^ $(free -h | awk '/^Mem/ { print $3 }' | sed s/i//g)"
}

wlan() {
	case "$(cat /sys/class/net/wl*/operstate 2>/dev/null)" in
	up) printf "^d^ ^c$blue^^b$black^  ^d^%s" "^c$white^^b$grey^ On ^d^";;
	down) printf "^d^ ^c$blue^^b$black^ 睊 ^d^%s" "^c$white^^b$grey^ Off ^d^";;
	esac
}

today() {
    printf "^c$black^^b$darkblue^  "
    printf "^c$black^^b$blue^ $(TZ=Europe/Paris date '+%d:%m:%Y') ^d^"
}

clock() {
	printf "^c$black^^b$darkblue^  "
	printf "^c$black^^b$blue^ $(TZ=Europe/Paris date '+%H:%M') ^d^"
}

lk() {
    current_time="TZ=Asia/Colombo date +%H:%M"
    # LK time
    printf "^d^^c$cyan2^^b$black^  ^d^%s" "^c$white^^b$grey^ $(TZ=Asia/Colombo date '+%H:%M') ^d^";
    # Function "currency_lk" is defined in ${XDG_CONFIG_HOME}/shell/env
    printf " ^c$white^^b$grey^ $1 ^d^";
}

vol() {
    VOL_LEVEL=$(pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')
    if [ $(pactl get-sink-mute @DEFAULT_SINK@ | cut -d " " -f 2) == "no" ]; then
	printf "^c$green^ 墳 $VOL_LEVEL ^d^"
    else
	printf "^c$green^ 婢 ^d^"
    fi
    
}

# Total files and folder in "$HOME"
spring_clean () {
    TOTAL=$(/usr/bin/exa -al $HOME | wc -l)
    printf "^c$blue^  $TOTAL^d^"
}

sync_maildir() {
    if [ ! `pgrep mbsync >/dev/null` ]
    then
	/usr/bin/mbsync -a -c ${XDG_CONFIG_HOME:-$HOME/.config}/isync/mbsyncrc
	
	MAIL_DIR="${XDG_DATA_HOME-:$HOME/.local/share}/mail/*/Inbox/new/"
	COUNT="$(find $MAIL_DIR -type f | wc -l)"

	echo "$COUNT"
    fi    
}

mail_notif() {
    MAIL_DIR="${XDG_DATA_HOME-:$HOME/.local/share}/mail/*/Inbox/new/"
    UNVIEWED_MAIL="$(find $MAIL_DIR -type f | wc -l)"

    NEW_MAIL=$(sync_maildir)

    #`notify-send` requires connection to DBUS_SESSION_BUS_ADDRESS
    # and one way is to export display and use X server authority cookies thru .Xauthority
    # see here https://askubuntu.com/questions/298608/notify-send-doesnt-work-from-crontab
    export DISPLAY=:0; export XAUTHORITY=~/.Xauthority
    [ $NEW_MAIL -gt $UNVIEWED_MAIL ] && /usr/bin/notify-send "You have $NEW_MAIL new mail!"

    printf "^c$cyan1^  $NEW_MAIL^d^"
}


# Timer
interval=0
mail_sync=0

while true; do
    # Update the value every hour
    [ $interval = 0 ] || [ $(($interval % 3600)) = 0 ] && UPDATES=$(pkg_updates) && DIR_COUNT=$(spring_clean) && CURRENCY_LK=$(currency_lk)
    interval=$((interval + 1))

    # Sync mail after 30s and then every 5 min
    [[ $mail_sync == 30 || ( $mail_sync -ge 30  &&  $(($mail_sync % 300)) = 0 ) ]] && MAIL_COUNT=$(mail_notif)
    mail_sync=$((mail_sync + 1))


    sleep 1 && xsetroot -name "$(cpu) $(mem) $(wlan) | $(clock) $(today) | $(lk $CURRENCY_LK) |$(vol) $(battery) $(brightness) |$UPDATES $DIR_COUNT $MAIL_COUNT "
done
